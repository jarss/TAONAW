<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on The Art of Not Asking Why</title>
    <link>https://joshrollinswrites.com/tags/security/</link>
    <description>Recent content in security on The Art of Not Asking Why</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Jul 2019 00:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://joshrollinswrites.com/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Basic SSH Security</title>
      <link>https://joshrollinswrites.com/help-desk-head-desk/basic-ssh-security/</link>
      <pubDate>28280-07-07</pubDate>
      
      <guid>https://joshrollinswrites.com/help-desk-head-desk/basic-ssh-security/</guid>
      <description>&lt;p&gt;They say a picture is worth a thousand words:&lt;/p&gt;



&lt;figure&gt;
    
        &lt;img src=&#34;https://joshrollinswrites.com/basic-ssh-security.png&#34;/&gt; &lt;/figure&gt;

&lt;p&gt;This is my SSH server&amp;rsquo;s log, and this looks like a good time to talk about basic ssh server security.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s back up just a bit for the whys and hows.&lt;/p&gt;
&lt;p&gt;To access my personal org files from work (my journal for example), I use &lt;a href=&#34;https://www.emacswiki.org/emacs/TrampMode&#34;&gt;TRAMP&lt;/a&gt; with SSH. Why SSH? It&amp;rsquo;s rudimentary, supported out of the box, and relatively private. My work and personal tasks meet in my agenda, but I like to keep my personal resources away from work computers just as I prefer to keep work material away from my personal machine. So, I need to have an SSH server up and running. My setup includes a Raspberry Pi (cheap, reliable, good single-function device) as an &lt;a href=&#34;https://joshrollinswrites.com/help-desk-head-desk/raspberry-pi-org-hub/&#34;&gt;SSH server and Syncthing hub&lt;/a&gt; and a router that has port-forwarding to allow incoming SSH connections.&lt;/p&gt;
&lt;p&gt;Even though I used a different port than the default 22, it was easy enough for the script kiddie in the picture above to find and identify. This is not hard to do; all you need is nmap. In this case, it seems some of the IPs belong to an Amazon server in the Philippines, so it looks like this particular individual uses an automated environment to find and exploit unprotected users. So far, this sounds like a classic scenario.&lt;/p&gt;
&lt;p&gt;I set down and decided to implement some basic security configurations I&amp;rsquo;ve should have had in place since day one. None of these are ground-breaking security, and I&amp;rsquo;m not an expert myself, but these are probably a good start.&lt;/p&gt;
&lt;h2 id=&#34;my-setup&#34;&gt;My Setup&lt;/h2&gt;
&lt;p&gt;These configurations are available inside &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;. I&amp;rsquo;m using OpenSSH server. If you&amp;rsquo;re using my configurations, remember to delete the &amp;ldquo;#&amp;rdquo; at the start of these lines, as they are marked as comments by default.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Port ####&lt;/code&gt;: Specify a port number. Never leave as 22. Go high up, I would personally start at the 8000s. These ports are less likely to be used and script kiddies are less likely to sniff these with their tools. Not exactly ironclad facts, but we need to start somewhere.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ListenAddress&lt;/code&gt;: The idea is to restrict the IP addresses the server will listen to, &lt;em&gt;but this is not where we actually do it (it failed for me)&lt;/em&gt;. Rather, I use it here as a reminder for later. Figure out where you&amp;rsquo;re connecting from and stick to it. You probably don&amp;rsquo;t need to SSH from across the world; for this, there&amp;rsquo;s &lt;a href=&#34;https://syncthing.net/&#34;&gt;Syncthing&lt;/a&gt; and a laptop. Read more details about my approach here further down.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LoginGraceTime 20s&lt;/code&gt;: In seconds (as in, 20s) this is how long the server will wait before it closes the connection. Leave low since you&amp;rsquo;re going to copy-paste a long, 30-character password you will never remember from password manager anyway (because you&amp;rsquo;re not going to use an 8-character password, right?? if you do, please stop reading right now and stop using SSH, you&amp;rsquo;ll be better off) and 20 seconds is plenty to do that. You could use a key, however, I chose not to use it for my setup because I keep using different machines (I should probably stop) and I figure I can change my password every other month or so. This is easy enough to do with a password manager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PermitRootLogin no&lt;/code&gt;: Never a good idea to log into your ssh as Root, you can always escalate once logged in as a user. Don&amp;rsquo;t let hackers login as root either. I can&amp;rsquo;t think of a good reason to allow root logins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;MaxAuthTries 2&lt;/code&gt;: Yes, you get two tries to try the password before it locks out. Not clear yet if this lasts until you reset the server or if it&amp;rsquo;s a timeout-based. Either way, since we copy-paste a password, this is good security measure if someone&amp;rsquo;s trying to brute-force their way in from a specific IP address, like in my case.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ClientAliveCountMax 0&lt;/code&gt; and &lt;code&gt;ClientAliveInterval 600&lt;/code&gt;: these work together, as per &lt;a href=&#34;https://www.thegeekstuff.com/2011/05/openssh-options/&#34;&gt;this article&lt;/a&gt;. The idea is to kill SSH when ideal. Here&amp;rsquo;s how it works: Interval is how long before the server sends a &amp;ldquo;hey, are you there?&amp;rdquo; question. CountMax is how many of these answered questions the server will accept. So, in the above, we are waiting 600 seconds which are 10 minutes, and then the server will send&amp;hellip; nothing, so it will disconnect. It means we&amp;rsquo;ll get kicked off after 10 minutes of inactivity.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;restricting-to-certain-ips-only&#34;&gt;Restricting to certain IPs only&lt;/h2&gt;
&lt;p&gt;In additions to these, I also restricted the allowed IP range as mentioned above. To do that we&amp;rsquo;re using two files, &lt;code&gt;/etc/hosts.deny&lt;/code&gt; and &lt;code&gt;/etc/hosts.allow&lt;/code&gt;. This is discussed &lt;a href=&#34;https://unix.stackexchange.com/questions/406245/limit-ssh-access-to-specific-clients-by-ip-address&#34;&gt;here&lt;/a&gt;, in option 2 (TCP wrappers). The system described here did not work for me as explained, and after reading into the instructions in the files themselves, I got it to work as follows:&lt;/p&gt;
&lt;p&gt;In the deny file, we add the line &lt;code&gt;sshd: ALL EXCEPT xxx.xxx.&lt;/code&gt;
where the xxx is the first and second octet of the IP address we want to allow. This is usually good enough to include all IPs from a certain place, but YMMV. In my case, this range specifies a specific office floor in my work site (which is fairly large), which restricts access only to my office floor area. When I tested the connection from my Android, I could not connect using my carrier but I &lt;em&gt;could&lt;/em&gt; connect from work since that&amp;rsquo;s the IP address I specified. This is an awesome technique.&lt;/p&gt;
&lt;p&gt;Again, this works for me but may not work for you. For one, you might be using a laptop for work and have a wider range of IPs as you move around. For this, I would consider using the laptop itself to store the files and sync with Syncthing. You may also decide to use one machine, in which case you might want to allow all IPs, but use a PGP key, which is much longer to guess than a password and will automatically reject connections trying to guess a password. This is a preferred method to what I use, try to implement it first if you can.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Password Managers Hacks</title>
      <link>https://joshrollinswrites.com/help-desk-head-desk/password-manager-hacking/</link>
      <pubDate>25250-02-02</pubDate>
      
      <guid>https://joshrollinswrites.com/help-desk-head-desk/password-manager-hacking/</guid>
      <description>&lt;p&gt;News that surfaced last week report of a &lt;a href=&#34;https://www.securityevaluators.com/casestudies/password-manager-hacking/&#34;&gt;security flaw&lt;/a&gt; that exists in the most popular password managers out there like LastPass, KeePass, and 1Password among others. Does this mean people should stop using them? No. Will people use this news as yet another excuse not to use password managers? Sure.&lt;/p&gt;
&lt;p&gt;The Washington Post&amp;rsquo;s &lt;a href=&#34;https://www.washingtonpost.com/people/geoffrey-a-fowler/?utm%5Fterm=.35d9d23f6b37&#34;&gt;Geoffrey A. Fowler&lt;/a&gt; &lt;a href=&#34;https://www.washingtonpost.com/amphtml/technology/2019/02/19/password-managers-have-security-flaw-you-should-still-use-one/&#34;&gt;nails it&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I still think you should use a password manager. So do the ethical hackers with Independent Security Evaluators who came to me with news of the flaws — and other security pros I spoke to about the study, published Tuesday. &lt;em&gt;You wouldn’t stop using a seat belt because it couldn’t protect you from every kind of vehicle accident. The same applies to password managers&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(emphasis at the end is mine)&lt;/p&gt;
&lt;p&gt;I am no security expert, but it seems to me exploiting this vulnerability requires physical access. This means that someone would need to grab your computer while you&amp;rsquo;re not watching, dump your RAM into a file, and run away with it before you come back in hopes it captured the right password. This is a much lower risk than a bad guy finding your reused &amp;ldquo;super safe password&amp;rdquo; you use for everything somewhere on the dark web, log into your bank account, your email, and your phone carrier&amp;rsquo;s website, and convince your bank he&amp;rsquo;s really you. But don&amp;rsquo;t take it from me, take it from &lt;a href=&#34;https://twitter.com/SwiftOnSecurity/status/1099264185211539456&#34;&gt;@SwiftOnSecurity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A good point there, as well: keyloggers (or similar) are actually more likely than a memory dump because they come bundled with most RATs out there and other Trojans people download from the web every day.&lt;/p&gt;
&lt;p&gt;But who&amp;rsquo;s going to listen anyway. I keep trying to get my partners on password managers, my family, and my friends. Almost no one buys in. My favorite argument of all time from an old classmate: &amp;ldquo;I feel safer remembering my passwords than some teenager hacker from Indonesia hacking into LastPass and stealing all my passwords.&amp;rdquo; Of which she has probably no more than 7.&lt;/p&gt;
&lt;p&gt;Sigh.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>From LastPass to KeePass</title>
      <link>https://joshrollinswrites.com/help-desk-head-desk/lastpass-to-keepass/</link>
      <pubDate>11110-02-02</pubDate>
      
      <guid>https://joshrollinswrites.com/help-desk-head-desk/lastpass-to-keepass/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using LastPass for the last 5 years and been happy with it. I recommended it to friends, family, and co-workers. I tried to sell it through its convenience: once set up, LastPass auto-fills user and password fields, and can even log you into a website directly. LastPass also creates complicated passwords automatically and is available on every major browser, iPhones and Android.&lt;/p&gt;
&lt;p&gt;But it seems like even LastPass&amp;rsquo;s time has come.&lt;/p&gt;
&lt;p&gt;As we know, Convenience usually comes at the price of security. LastPass auto-fill is quick and effective but also makes it very easy for someone else to grab your laptop, find your bank website in your history, and log int with your saved credentials.  To resolve this issue, LastPass has a couple of built-in options such as logging you out after a certain amount of time or logging off when the browser is closed. There features need to be activated on each new installation of LastPass.&lt;/p&gt;
&lt;p&gt;So LastPass was an obvious choice for my mom&amp;rsquo;s new chromebook. I thought I&amp;rsquo;d set her up with a new account and share passwords with her directly. I wanted her to learn to trust the app and starts creating new secure passwords instead of using the same two or three she&amp;rsquo;s been using for years. But instead, I discovered a problem.  there were problems.&lt;/p&gt;
&lt;p&gt;The option to log off automatically if chrome is closed was ignored. I&amp;rsquo;ve checked and &lt;a href=&#34;https://www.reddit.com/r/Lastpass/comments/aozro2/lastpass%5Fauto%5Flogout%5Fdoesnt%5Fwork%5Fout%5Fon/&#34;&gt;asked other users on Reddit&lt;/a&gt;, but all I got is the &lt;a href=&#34;https://lastpass.com/support.php?cmd=showfaq&amp;amp;id=3846&#34;&gt;generic troubleshooting advice&lt;/a&gt; to make sure Chrome completely exists for the auto logoff to work. Exiting Chrome is possible on Windows, Mac, and Linux (for which this guide was written) but, as it turned out, is &lt;em&gt;not&lt;/em&gt; possible on a Chromebook. I &lt;a href=&#34;https://support.google.com/chromebook/answer/6309225?hl=en&#34;&gt;summoned the ChromeOS task manager&lt;/a&gt; with &lt;code&gt;shift+esc&lt;/code&gt; or more recently &lt;code&gt;search+esc&lt;/code&gt; (this is different than the Chrome browser&amp;rsquo;s task manager, which is accessible from inside Chrome) and saw that Chrome was still running even after I exited the app. I couldn&amp;rsquo;t force chrome to quit either: The button to do so was grayed out when I had Chrome highlighted on the list.&lt;/p&gt;
&lt;p&gt;That meant that the only thing protecting someone from accessing all your passwords is your Google Password with lockscreen enabled. Perhaps i&amp;rsquo;m paranoid, but for me, that&amp;rsquo;s not nearly enough. I disabled the extension and asked myself these two questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Is it worth using LastPass over Chrome&amp;rsquo;s built in password manger?&lt;/li&gt;
&lt;li&gt;Is LastPass really a good option to securely save passwords?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The the first answer is &amp;ldquo;not really.&amp;rdquo; If you&amp;rsquo;re a LastPass power user, who have the application on your phone and use a family plan (which allows you to share passwords), then yes, LastPass gives you more features. However, Chrome&amp;rsquo;s Password Manager now allows you to create secure passwords and sync them with your Google Profile, which means you will have access to those anywhere you log in including your Phone. Since on a Chromebook your security is already handled by Google, there&amp;rsquo;s not much sense to start a new account with LastPass, which basically does the same thing.&lt;/p&gt;
&lt;p&gt;The second question is harder to answer. LastPass is a company that makes its business to secure passwords all day every day, and they have a great product. They are, overall, pretty transparent with their security breaches when they happen and apply patches and fixes very fast.&lt;/p&gt;
&lt;p&gt;However, LastPass&amp;rsquo; browser extension is also its weakest point. To be fair, the same can be said for &lt;em&gt;any&lt;/em&gt; password manager that has an extension built into the browser. Various vulnerabilities have been listed before and &lt;a href=&#34;https://lastpass.com/support.php?cmd=showfaq&amp;amp;id=11012&#34;&gt;some were listed by LastPass&lt;/a&gt; themselves. If you&amp;rsquo;re really concerned about the security of your passwords, you should not use a browser extension. However,if I am hard-pressed between choosing Chrome&amp;rsquo;s built in password solution and a third party&amp;rsquo;s solution that is built into Chrome, I will go with Chrome&amp;rsquo;s built-in solution because it&amp;rsquo;s native to the application and hence (hopefully) more secure.&lt;/p&gt;
&lt;p&gt;But. The real answer here is that you shouldn&amp;rsquo;t use a browser extension &lt;em&gt;at all&lt;/em&gt;. And that&amp;rsquo;s what I do these days.&lt;/p&gt;
&lt;p&gt;My favorite solution is to use good ol&amp;rsquo; &lt;a href=&#34;https://en.wikipedia.org/wiki/KeePass&#34;&gt;KeyPass&lt;/a&gt;, which has been around for about 15 years. I like KeyPass for a couple of reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It&amp;rsquo;s a standalone program with  a simple GUI and flexibility. It works and looks better than LastPass&amp;rsquo;s more complicated controls and does not relay on cookies.&lt;/li&gt;
&lt;li&gt;The only person with my passwords is me, which makes me sleep better at night. This has been my general trend since I started using Linux. It&amp;rsquo;s not about privacy and less about security, a proud feeling of owning my on data, something I feel we don&amp;rsquo;t do enough these days.&lt;/li&gt;
&lt;li&gt;KeyPass is old, open sourced, free, and probably not going anywhere. I&amp;rsquo;d like to say the same thing about LastPass, but companies such as these are constantly get eaten by greedy corporation that inject them with crap like social network integration and ads.&lt;/li&gt;
&lt;li&gt;With it&amp;rsquo;s combination of using key files and different ciphers (at least via plugins), it feels solid and secure. Not that LastPass security is not good enough. It should also be mentioned that LastPass has two-factor authentication.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Because KeyPass doesn&amp;rsquo;t have a browser extension (at least not out of the box), I use &lt;a href=&#34;https://www.semicomplete.com/projects/xdotool/&#34;&gt;xdotool&lt;/a&gt; to auto-type passwords into websites&amp;rsquo; text fields. The workflow: I click the user field on a website, Alt+Tab back to KeyPass, hit the auto-type shortcut, and watch KeyPass putting in my credentials as if I&amp;rsquo;m typing them from memory. Because I can customize the auto-input macro (KeyPass2 and up), eventually this makes it even more reliable than LastPass&amp;rsquo; auto-fill feature, which sometimes doesn&amp;rsquo;t work well with fancy animated menus.&lt;/p&gt;
&lt;p&gt;LastPass is another tool I didn&amp;rsquo;t think about replacing when I transitioned into Linux, and for a long time, I kept using it in Linux as well. When I switched away from Chrome and stopped being logged into Google all the time, Chrome&amp;rsquo;s extensions stayed behind. Like many other products (Gmail, Google Docs, Dropbox&amp;hellip;) I&amp;rsquo;m slowly but surely finding good open source options which are often better.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Hub</title>
      <link>https://joshrollinswrites.com/help-desk-head-desk/raspberry-pi-org-hub/</link>
      <pubDate>22220-11-11</pubDate>
      
      <guid>https://joshrollinswrites.com/help-desk-head-desk/raspberry-pi-org-hub/</guid>
      <description>&lt;p&gt;Having a consisted, stable server for my org files has been on my mind for a while. I bought a Raspberry PI (RP) to serve as a file server to be used as a &amp;ldquo;hub&amp;rdquo; that will always be on and host these files. This is a description of the setup of what I&amp;rsquo;ve done to make this work. I hope you&amp;rsquo;d find this useful! Feel free to contact me with any questions.&lt;/p&gt;
&lt;h2 id=&#34;buying-the-raspberry-pi-dot&#34;&gt;Buying the Raspberry Pi.&lt;/h2&gt;
&lt;p&gt;For the setup I describe here, you need the RP itself, a power source, an SD card, a USB case for 2.5 inch HDD, and the HDD itself. You&amp;rsquo;ll also need an Ethernet cord for this setup. If you don&amp;rsquo;t have one, go grab yourself a &lt;a href=&#34;https://www.amazon.com/AmazonBasics-RJ45-Cat-6-Ethernet-Patch-Cable-5-Feet-1-5-Meters/dp/B00N2VILDM/ref=lp%5F9938478011%5F1%5F1?s=pc&amp;amp;ie=UTF8&amp;amp;qid=1542991619&amp;amp;sr=1-1&#34;&gt;CAT6 cord Amazon Basics&lt;/a&gt; cable, it&amp;rsquo;s always good to have one around.&lt;/p&gt;
&lt;p&gt;For the RP, you better off getting a package similar to &lt;a href=&#34;https://www.amazon.com/CanaKit-Raspberry-Complete-Starter-Kit/dp/B01C6Q2GSY/ref=sr%5F1%5Ffkmr0%5F2?s=electronics&amp;amp;ie=UTF8&amp;amp;qid=1541986065&amp;amp;sr=1-2-fkmr0&amp;amp;keywords=canakit+raspberry+pi+3+b++sd+card&#34;&gt;this one&lt;/a&gt;. You could probably get something slightly cheaper by getting all the parts yourself, but not by much. Better to have everything you need at once without worrying about forgetting something. I didn&amp;rsquo;t get the above package with the SD card, so I had to wait a couple of days for another order to come in.&lt;/p&gt;
&lt;p&gt;The HDD I had laying around already, so I got &lt;a href=&#34;https://www.amazon.com/gp/product/B01M08LCXW/ref=oh%5Faui%5Fdetailpage%5Fo00%5Fs00?ie=UTF8&amp;amp;psc=1&#34;&gt;this case&lt;/a&gt; for it. 8 bucks.&lt;/p&gt;
&lt;h2 id=&#34;setting-up-the-rp&#34;&gt;Setting up the RP&lt;/h2&gt;
&lt;p&gt;First, we&amp;rsquo;re going to set up the SD card to run our RP.&lt;/p&gt;
&lt;p&gt;Before we jump in, a note about my setup: I have Linux in a VM inside a Windows host. As it turns out, having Windows an alt-tab away (or in my case, ctrl+alt+left arrow away) can be very useful.&lt;/p&gt;
&lt;p&gt;If switch between Windows programs and Linux commands without mentioning it, that&amp;rsquo;s because this setup comes naturally to me at this point. I&amp;rsquo;ve been working this way (office and home) for almost four years, minusaa half a year of dual-booting with Linux-Mint as my daily OS. There&amp;rsquo;s a whole story here about the switch to Linux and back, but that&amp;rsquo;s for another time.&lt;/p&gt;
&lt;p&gt;OK! Enough chatter. Let&amp;rsquo;s get on with it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download &lt;a href=&#34;https://www.raspberrypi.org/downloads/raspbian/&#34;&gt;Raspbian&lt;/a&gt; (zip file).&lt;/li&gt;
&lt;li&gt;Format the SD to FAT32&lt;/li&gt;
&lt;li&gt;Unzip, and write the image to the SD using &lt;a href=&#34;https://sourceforge.net/projects/win32diskimager/&#34;&gt;Win32 diskimager&lt;/a&gt; or Underbootin. For me, the first option is better when I deal with SD cards and my USB-SD adapter, YMMV.&lt;/li&gt;
&lt;li&gt;Create an empty file (no extension) on the SD root called SSH.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That last part is important. Creating the file (in windows, just create a new text file, rename to SSH and delete the extension) is what tells our RP to open port 22 for SSH.&lt;/p&gt;
&lt;p&gt;Then you insert the SD card and power the RP up. Log into your router to find the RP&amp;rsquo;s IP address.  This is why you need to Ethernet connection for. You won&amp;rsquo;t be able to access the RP with WiFi for this.&lt;/p&gt;
&lt;p&gt;Go ahead and SSH into the RP as pi: &lt;code&gt;ssh pi@[RP IP address here]&lt;/code&gt;. your default password is raspberry.&lt;/p&gt;
&lt;p&gt;Once in, you want to sudo into  RP config tool: &lt;code&gt;sudo raspi-config&lt;/code&gt;. The setup tool is straightforward enough, but I found that remoting into the pi itself with VNC (coming up) is more convenient, so the only option we really care about now is to turn VNC on:
go to interface options (option 5 in my case, in the middle), and do that.&lt;/p&gt;
&lt;p&gt;Save, get out, and then download &lt;a href=&#34;https://www.realvnc.com/en/connect/download/vnc/linux/&#34;&gt;RealVNC&lt;/a&gt;. I downloaded it for Linux because that&amp;rsquo;s what I use to SSH and setup my Pi. It&amp;rsquo;s also where later I will setup Syncthing (coming up), so it made sense. RealVNC is the recommended option for RPs. it&amp;rsquo;s easy to install and run, and supports VNCing with a password, which is what you need for the RP. As a bonus, it automatically creates nice thumbnails of the last logins (IP addresses) which can be useful.&lt;/p&gt;
&lt;p&gt;With RealVNC, go ahead and connect to the RP using the same IP address and default password. The Raspbian will jump on you right away telling you need to change your default password and a bunch of other things. and that&amp;rsquo;s all good. Follow these screens, and after updates are downloaded, &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; restart just yet.&lt;/p&gt;
&lt;p&gt;You might have noticed you&amp;rsquo;re working in a tiny little screen. Let&amp;rsquo;s change that quickly by going to the preferences (click on the RP icon at the top left), then Raspberry Pi Configurations. Under resolution, choose something that works well for you. for my ultra wide screen, 1920x1080 was good enough to work in. Now you can restart. If you changed your password (you should have!) leave RealVNC on and it will inform you the password is wrong (because you changed it). All good, log in.&lt;/p&gt;
&lt;h2 id=&#34;a-note-about-passwords-and-password-generators&#34;&gt;A note about passwords and password generators&lt;/h2&gt;
&lt;p&gt;If you use a password manager (my favorite on Linux now is xpass, LastPass is another), I strongly recommend to copy-paste your password in plaintext somewhere first, then copy it to the RP password-change field, and click the eye icon to reveal it. &lt;em&gt;Make sure what you pasted is the same thing you think you pasted&lt;/em&gt;. In my case, I messed this up twice and had to image my SD card all over again. Yes, &lt;a href=&#34;https://howtoraspberrypi.com/recover-password-raspberry-pi/&#34;&gt;there&amp;rsquo;s a technique to reset up the password by booting into the root shell&lt;/a&gt;, but this didn&amp;rsquo;t work for me. And besides, it&amp;rsquo;s annoying and requires to physically connect a screen and keyboard to the RP.&lt;/p&gt;
&lt;p&gt;Because my RP is set up for SSH with a password for now, I made a random 32 character password for it. copy-paste is not a choice.&lt;/p&gt;
&lt;h2 id=&#34;encrypting-the-hdd&#34;&gt;Encrypting the HDD&lt;/h2&gt;
&lt;p&gt;I chose to use a separate HDD for a couple of reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I can take it with me if I need to and mount to another machine&lt;/li&gt;
&lt;li&gt;I have unused HDDs laying around from computer repairs. In my case, the HDD is 500GB, more than enough for text files and occasional pictures I use in Org-mode.&lt;/li&gt;
&lt;li&gt;If the HDD dies, I still have a functional RP with the OS on the SD card.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The encryption tool of choice for me ended up being LUKS, the same thing that encrypts Linux machines at startup. Actually, my first choice was &lt;a href=&#34;https://www.veracrypt.fr/en/Downloads.html&#34;&gt;VeryCrypt&lt;/a&gt;. It comes with a convenient GUI and better options to handle containers. As it turns out, there&amp;rsquo;s no updated version for ARM (which is what the RP is), and I&amp;rsquo;d have to compile from source. Possible, but not worth it for now.&lt;/p&gt;
&lt;p&gt;VNC into your RP.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First, Install cryptsetup on the RP (apt-get). This is the LUKS suite.&lt;/li&gt;
&lt;li&gt;Figure out the USB-connected drive: &lt;code&gt;sudo fdisk -l&lt;/code&gt;. this will show you where&amp;rsquo;s your hdd in /dev. In my case, it was in /dev/sda (not sda1, etc.)&lt;/li&gt;
&lt;li&gt;Format with LUKS:  &lt;code&gt;cryptsetup luksFormat /dev/[drive]&lt;/code&gt; the default option was fine for me, but be aware that LUKS comes with many options if you so desire. When formatting, it should ask for a passphrase, so give it one. Then it should start doing its thing.&lt;/li&gt;
&lt;li&gt;When done, verify your drive is encrypted with  &lt;code&gt;cryptsetup luksDump /dev/[drive]&lt;/code&gt;. You should see information about the encryption, along with the first key (LUKS can hold up to eight keys) and its hash. This means we&amp;rsquo;re all good so far.&lt;/li&gt;
&lt;li&gt;Now, create a mount point for your drive. for me, out of habit of using Mint, that was /media/pimount. So: &lt;code&gt;sudo mkdir /media/pimount&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This is where things get a bit hazy since I&amp;rsquo;m writing this from memory. We need to open the encrypted drive with &lt;code&gt;cryptsetup luksOpen /dev/mapper/[drive name] [mounting point name]&lt;/code&gt;. Notice we have &lt;strong&gt;mapper&lt;/strong&gt; in the path after dev now. that&amp;rsquo;s how LUKS work. The encryption is not being done on &lt;em&gt;dev&lt;/em&gt;[drive] itself. I&amp;rsquo;m not sure why (I&amp;rsquo;m sure there&amp;rsquo;s some Linux file system reason behind it), so feel free to educate me.&lt;/li&gt;
&lt;li&gt;Now, we need to format the drive with the file system of our choice. In my case, ext4. I believe this can also be done for FAT32 or even NTFS if you want to access your drive from Windows, but I haven&amp;rsquo;t tested that. To format, you can download Gparted, which is good to have in general. However, this is easy to do with &lt;code&gt;mkfs.ext4 /dev/[name]&lt;/code&gt;. In fact, that&amp;rsquo;s exactly what Gparted would do for you anyway.&lt;/li&gt;
&lt;li&gt;Mount the freshly formatted drive: &lt;code&gt;mount /dev/mapper/[name] /media/[name]&lt;/code&gt;  If we have &amp;ldquo;show mounted drives&amp;rdquo; option on the desktop in RP, it should show now. As a matter of fact, it&amp;rsquo;s a good idea to enable this (right click on the RP desktop).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Before you start putting stuff on your HDD, it&amp;rsquo;s a good idea to restart and practice mounting the drive again (step 6 and 8; you don&amp;rsquo;t need to format again!). Then do it again. The unmount command is umount (no n), or you can simply restart the Pi.  There&amp;rsquo;s a way to automate this using fstab, but messing your fstab could screw up your RP as it happened to me. I figured I never plan on really turning off the thing, so I will just keep doing it manually. Now, if someone happens to just grab your HDD and walk away, it will need to be mounter and decrypted.&lt;/p&gt;
&lt;h2 id=&#34;syncthing-setup&#34;&gt;Syncthing setup&lt;/h2&gt;
&lt;p&gt;To me, &lt;a href=&#34;https://en.wikipedia.org/wiki/Syncthing&#34;&gt;Syncthing&lt;/a&gt; is the best solution for all my file-syncing needs. It works without a hitch until you need to change something tiny and meaningless. Then all hell breaks loose. I don&amp;rsquo;t understand why that is, but I learned to accept it as a fact of life at this point.&lt;/p&gt;
&lt;p&gt;During this RP weekend setup, I had to change my Syncthing setup so that the RP will become the central hub. What happened was a fruitless night of trying to figure out why Syncthing stopped syncing and  an messy Monday at work. It was such a bad setback, in fact, that I decided to create a process dubbed &amp;ldquo;downfall&amp;rdquo; for future cases just like this one when I can&amp;rsquo;t use Org-mode at work. Yes, not having Syncthing basically means I can&amp;rsquo;t use Org. But I digress&amp;hellip; The important lesson here is this:&lt;/p&gt;
&lt;p&gt;don&amp;rsquo;t mess with Syncthing. Set it up, make sure it works, and &lt;em&gt;don&amp;rsquo;t touch it&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As intimidating as this sounds, Syncthing actually has a pretty simple setup process. Here&amp;rsquo;s the plan:&lt;/p&gt;



&lt;figure&gt;
    
        &lt;img src=&#34;https://joshrollinswrites.com/hub.png&#34;/&gt; &lt;/figure&gt;

&lt;p&gt;The different colors represent the different folders in syncthing. To me these are personal, work, utilities (this is the only folder that does not have org files), and archive.&lt;/p&gt;
&lt;p&gt;I use four devices, three daily, one (laptop) once in a while. The home VM, which is my main productivity box, gets everything. So does the laptop, it&amp;rsquo;s meant to be used as my home away from home. My work VM (OpenSuse Linux) only contains work org files and the archive. On the phone, I skip media-heavy folders like DnD and some classical music flac files to save space.&lt;/p&gt;
&lt;p&gt;The setup process:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install Syncthing on RP (apt-get).&lt;/li&gt;
&lt;li&gt;Choose the first device to sync. Add the RP&amp;rsquo;s ID to its Syncthing.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Wait&lt;/em&gt; for RP to acknowledge the device. Approve.&lt;/li&gt;
&lt;li&gt;From the connecting device, share the folders you want to sync with the RP.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Wait&lt;/em&gt; for RP to acknowledge folders. Approve each, choose path.&lt;/li&gt;
&lt;li&gt;Verify the sync work by altering the files a bit.&lt;/li&gt;
&lt;li&gt;Choose the second device to sync&amp;hellip; repeat step 3-5.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, folders that common to a couple of devices should be added first from one device (as stated above) with the RP, and then add that folder to the &lt;em&gt;other&lt;/em&gt; device. Device_A &amp;ndash;&amp;gt; RP &amp;ndash;&amp;gt; Device_B. This ensures you&amp;rsquo;re sharing the same folder (same folder ID) and not creating duplicates. The reason you&amp;rsquo;re doing it this way and not just sharing from one device to another is because you don&amp;rsquo;t want the other devices to see each other; they should only &amp;ldquo;see&amp;rdquo; the RP. The RP is the only device that needs to see all of them. Fewer complications means Syncthing works better and faster. Remember what I said earlier: don&amp;rsquo;t play with it, keep it simple and it will work. Complicate it, and you&amp;rsquo;ll spend hours trying to figure out what&amp;rsquo;s wrong.&lt;/p&gt;
&lt;p&gt;So for example, if I first sync my home VM and share the &amp;ldquo;work&amp;rdquo; folder to the RP, after I&amp;rsquo;m done and verify the sync work, I am connecting the work VM to the RP, wait until it&amp;rsquo;s recognized, and then send the work folder (which is now synced between home VM and RP) &lt;em&gt;to&lt;/em&gt; the work VM.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
